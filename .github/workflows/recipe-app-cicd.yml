name: Recipe App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  start-frontend:
    name: Start Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Start Frontend
        run: |
          cd frontend
          npm start

  start-backend:
    name: Start Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js for Backend
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      - name: Start Backend
        run: |
          cd backend
          npm start

  build-and-push:
    needs: [start-frontend, start-backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/recipe-app:latest
            ${{ secrets.DOCKER_USERNAME }}/recipe-app:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/recipe-app:latest
            docker stop recipe-app || true
            docker rm recipe-app || true
            docker run -d --name recipe-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/recipe-app:latest
            echo "Deployment completed!"
